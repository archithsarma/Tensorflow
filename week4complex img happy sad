import tensorflow as tf
import os
import zipfile
from os import path, getcwd, chdir

path = f"{getcwd()}/../tmp2/happy-or-sad.zip"

zip_ref = zipfile.ZipFile(path, 'r')
zip_ref.extractall("/tmp/h-or-s")
zip_ref.close()

def train_happy_sad_model():
   

    class myCallback(tf.keras.callbacks.Callback):
         def on_epoch_end(self, epoch, logs={}):
            if(logs.get('acc')>0.999):
              print("\nReached 99% accuracy so cancelling training!")
              self.model.stop_training = True

    callbacks = myCallback()
    
   
    model = tf.keras.models.Sequential([ tf.keras.layers.Conv2D(16, (3,3), activation='relu', input_shape=(150,150, 3)),
    tf.keras.layers.MaxPooling2D(2, 2),
    tf.keras.layers.Conv2D(32, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(512, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')])

    from tensorflow.keras.optimizers import RMSprop

    model.compile(loss='binary_crossentropy',
              optimizer=RMSprop(lr=0.001),
              metrics=['acc'])
        
    from tensorflow.keras.preprocessing.image import ImageDataGenerator

    train_datagen = ImageDataGenerator(rescale=1/255)

    train_generator = train_datagen.flow_from_directory(
        '/tmp/h-or-s',  
        target_size=(150, 150),  
        batch_size=128,
        class_mode='binary')
       
    history = model.fit_generator(train_generator,
      steps_per_epoch=8,  
      epochs=15,
      verbose=1,
       )
    return history.history['acc'][-1]
    
    
    
    
    OUTPUT----------------------
    
    
    
    Found 80 images belonging to 2 classes.
Epoch 1/15
8/8 [==============================] - 9s 1s/step - loss: 4.0489 - acc: 0.5625
Epoch 2/15
8/8 [==============================] - 3s 365ms/step - loss: 0.4472 - acc: 0.7984
Epoch 3/15
8/8 [==============================] - 3s 364ms/step - loss: 0.1529 - acc: 0.9594
Epoch 4/15
8/8 [==============================] - 3s 361ms/step - loss: 0.0664 - acc: 0.9797
Epoch 5/15
8/8 [==============================] - 3s 362ms/step - loss: 0.0348 - acc: 0.9922
Epoch 6/15
8/8 [==============================] - 3s 350ms/step - loss: 0.0114 - acc: 1.0000
Epoch 7/15
8/8 [==============================] - 3s 364ms/step - loss: 0.0056 - acc: 1.0000
Epoch 8/15
8/8 [==============================] - 3s 385ms/step - loss: 0.0023 - acc: 1.0000
Epoch 9/15
8/8 [==============================] - 3s 389ms/step - loss: 0.0013 - acc: 1.0000
Epoch 10/15
8/8 [==============================] - 3s 351ms/step - loss: 6.4724e-04 - acc: 1.0000
Epoch 11/15
8/8 [==============================] - 3s 362ms/step - loss: 3.4424e-04 - acc: 1.0000
Epoch 12/15
8/8 [==============================] - 3s 374ms/step - loss: 1.9155e-04 - acc: 1.0000
Epoch 13/15
8/8 [==============================] - 3s 351ms/step - loss: 1.0658e-04 - acc: 1.0000
Epoch 14/15
8/8 [==============================] - 3s 361ms/step - loss: 6.1332e-05 - acc: 1.0000
Epoch 15/15
8/8 [==============================] - 3s 362ms/step - loss: 3.5297e-05 - acc: 1.0000
